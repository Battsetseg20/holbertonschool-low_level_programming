#include <holberton.h>

/**
 *test_pal - tests if string is palindrome
 *
 *@s: string to test
 *@f: first character of a string
 *@l: last character of a string
 *
 *Return: 1 if palindrome, 0 if else
 */

int test_pal(char *s, int f, int l)
{
	int n = _strlen_recursion(s);

	if (n == 1 || n == 0)        /* if one character or empty*/
		return (1);

	if (s[0] != s[n-1])          /* if first index != last index */
		return (0);

	if (s[0] == s[n-1])          /* if first index = last index */
		return (1);

	return (test_pal(s, ++f, --l)); /* recursively check f+1,l-1 */
}

/**
 *is_palindrome - states if a string is a palindrome
 *
 *@s: string to test
 *
 *Return: 1 is palindrome, 0 if else
 */

int is_palindrome(char *s)
{
	int f, l;

	return (test_pal(s, f, l));
}
